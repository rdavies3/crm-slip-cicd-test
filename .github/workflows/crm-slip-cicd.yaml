name: deploy-app

on:
  push:
    branches:
      - dev
      - qa
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env: 
  URL: https://elastic.snaplogic.com
  APP_NAME: ${{ github.event.repository.name }}
  MY_ORG: ${{ github.ref == 'refs/heads/main' && 'asu-prod'|| 'asu-np' }}
  MY_REF: ${{ if eq(github.ref, 'refs/heads/main') }}refs/main{{ elif eq(github.ref, 'refs/heads/qa') }}refs/qa{{ else }}refs/dev{{ endif }}

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:

      - name: Delete project build folder
        run: |
          curl --location --request DELETE '${{ env.URL }}/api/1/rest/public/assetapi/project/${{ env.MY_ORG }}/CICD/${{ env.APP_NAME }}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Basic ${{ secrets.SNAPLOGIC_HTTP_BASIC_AUTH }}' 
        # Continue even if the CURL command fails
        continue-on-error: true

      - name: Print my_ref
        run: echo "my_ref = ${{ env.MY_REF }}"

      - name: Create project build folder
        run: |
          # Execute the CURL API DELETE
          curl --location --request POST '${{ env.URL }}/api/1/rest/public/assetapi/project/${{ env.MY_ORG }}/CICD/${{ env.APP_NAME }}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Basic ${{ secrets.SNAPLOGIC_HTTP_BASIC_AUTH }}' \
            --data-raw '{
                "permissions": [
                    {
                        "perms": [
                            "R",
                            "W",
                            "X"
                        ],
                        "subject_type": "USER",
                        "inherit": true,
                        "subject": "roger.davies@asu.edu"
                    }
                ]
            }'

      - name: Checkout Project from Github to project build folder
        run: |
          echo "branch = ${{ github.event.ref }}"
          curl --location --request POST '${{ env.URL }}/api/1/rest/public/project/checkout/${{ env.MY_ORG }}/CICD/${{ env.APP_NAME }}' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Basic ${{ secrets.SNAPLOGIC_HTTP_BASIC_AUTH }}' \
            --data-raw  '{
                "repo": "${{ github.repository }}",
                "ref": "${{ env.MY_REF }}"
              }'
          